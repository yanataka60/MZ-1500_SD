			  Z80 ASSEMBLER - ZASM VER 1.6
  1000                	ELMD		EQU		1000H
  1001                	LNAME		EQU		1001H
  1014                	LSIZE		EQU		1014H
  10F0                	IBUFE		EQU		10F0H
  10F1                	FNAME		EQU		10F1H
  1102                	FSIZE		EQU		1102H
  1104                	SADRS		EQU		1104H
  11A4                	LBUF		EQU		11A4H
  1070                	TEXTST		EQU		1070H
  1072                	TEXTED		EQU		1072H
  1074                	VARST		EQU		1074H
  1076                	STRST		EQU		1076H
  1078                	VARED		EQU		1078H
  107A                	TMPEND		EQU		107AH
                      	
                      	;0A0H PORTA 送信データ(下位4ビット)
                      	;0A1H PORTB 受信データ(8ビット)
                      	;
                      	;0A2H PORTC Bit
                      	;7 IN  CHK
                      	;6 IN
                      	;5 IN
                      	;4 IN 
                      	;3 OUT
                      	;2 OUT FLG
                      	;1 OUT
                      	;0 OUT
                      	;
                      	;0A3H コントロールレジスタ
                      	
                      	
  2200                			ORG		2200H
                      	
  2200  C31222        			JP		START
                      	;******************** MONITOR CMTルーチン代替 *************************************
  2203  C36422        	ENT1:	JP		MSHED
  2206  C38622        	ENT2:	JP		MSDAT
  2209  C3C722        	ENT3:	JP		MLHED
  220C  C31923        	ENT4:	JP		MLDAT
  220F  C36B23        	ENT5:	JP		MVRFY
                      			
  2212  CD1622        	START:	CALL	INIT
  2215  C9            			RET
                      			
                      	;**** 8255初期化 ****
                      	;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
  2216  3E8A          	INIT:	LD		A,8AH
  2218  D3A3          			OUT		(0A3H),A
                      	;出力BITをリセット
  221A  3E00          	INIT2:	LD		A,00H      ;PORTA <- 0
  221C  D3A0          			OUT		(0A0H),A
  221E  D3A2          			OUT		(0A2H),A   ;PORTC <- 0
  2220  C9            			RET
                      	
                      	;**** 1BYTE受信 ****
                      	;受信DATAをAレジスタにセットしてリターン
  2221                	RCVBYTE:
  2221  CD5622        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  2224  3E05          			LD		A,05H
  2226  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 1
  2228  DBA1          			IN		A,(0A1H)   ;PORTB -> A
  222A  F5            			PUSH 	AF
  222B  CD5D22        			CALL	F2CHK      ;PORTC BIT7が0になるまでLOOP
  222E  3E04          			LD		A,04H
  2230  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 0
  2232  F1            			POP 	AF
  2233  C9            			RET
                      			
                      	;**** 1BYTE送信 ****
                      	;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
  2234                	SNDBYTE:
  2234  F5            			PUSH	AF
  2235  1F            			RRA
  2236  1F            			RRA
  2237  1F            			RRA
  2238  1F            			RRA
  2239  E60F          			AND		0FH
  223B  CD4522        			CALL	SND4BIT
  223E  F1            			POP		AF
  223F  E60F          			AND		0FH
  2241  CD4522        			CALL	SND4BIT
  2244  C9            			RET
                      	
                      	;**** 4BIT送信 ****
                      	;Aレジスタ下位4ビットを送信する
  2245                	SND4BIT:
  2245  D3A0          			OUT		(0A0H),A
  2247  3E05          			LD		A,05H
  2249  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 1
  224B  CD5622        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  224E  3E04          			LD		A,04H
  2250  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 0
  2252  CD5D22        			CALL	F2CHK
  2255  C9            			RET
                      			
                      	;**** BUSYをCHECK(1) ****
                      	; 82H BIT7が1になるまでLOP
  2256  DBA2          	F1CHK:	IN		A,(0A2H)
  2258  E680          			AND		80H        ;PORTC BIT7 = 1?
  225A  28FA          			JR		Z,F1CHK
  225C  C9            			RET
                      	
                      	;**** BUSYをCHECK(0) ****
                      	; 82H BIT7が0になるまでLOOP
  225D  DBA2          	F2CHK:	IN		A,(0A2H)
  225F  E680          			AND		80H        ;PORTC BIT7 = 0?
  2261  20FA          			JR		NZ,F2CHK
  2263  C9            			RET
                      	
                      	;*********************** 0436H MONITOR ライト インフォメーション代替処理 ************
  2264                	MSHED:
  2264  D5            			PUSH	DE
  2265  C5            			PUSH	BC
  2266  E5            			PUSH	HL
                      	
  2267  3E91          			LD		A,91H      ;HEADER SAVEコマンド91H
  2269  CD6D23        			CALL	MCMD       ;コマンドコード送信
  226C  A7            			AND		A          ;00以外ならERROR
  226D  C27E23        			JP		NZ,MERR
                      	
  2270  21F010        			LD		HL,IBUFE
  2273  0680          			LD		B,80H
  2275  7E            	MSH1:	LD		A,(HL)     ;インフォメーション ブロック送信
  2276  CD3422        			CALL	SNDBYTE
  2279  23            			INC		HL
  227A  10F9          			DJNZ	MSH1
                      	
  227C  CD2122        			CALL	RCVBYTE    ;状態取得(00H=OK)
  227F  A7            			AND		A          ;00以外ならERROR
  2280  C27E23        			JP		NZ,MERR
                      	
  2283  C37923        			JP		MRET       ;正常RETURN
                      	
                      	;******************** 0475H MONITOR ライト データ代替処理 **********************
  2286                	MSDAT:
  2286  D5            			PUSH	DE
  2287  C5            			PUSH	BC
  2288  E5            			PUSH	HL
  2289  3E92          			LD		A,92H      ;DATA SAVEコマンド92H
  228B  CD6D23        			CALL	MCMD       ;コマンドコード送信
  228E  A7            			AND		A          ;00以外ならERROR
  228F  C27E23        			JP		NZ,MERR
                      	
  2292  210211        			LD		HL,FSIZE   ;FSIZE送信
  2295  7E            			LD		A,(HL)
  2296  CD3422        			CALL	SNDBYTE
  2299  23            			INC		HL
  229A  7E            			LD		A,(HL)
  229B  CD3422        			CALL	SNDBYTE
                      	
  229E  CD2122        			CALL	RCVBYTE    ;状態取得(00H=OK)
  22A1  A7            			AND		A          ;00以外ならERROR
  22A2  C27E23        			JP		NZ,MERR
                      	
  22A5  21F010        			LD		HL,IBUFE
  22A8  7E            			LD		A,(HL)
  22A9  FE05          			CP		05H				;FILE MODEが05ならBASIC TEXT START ADDRESSをSADRSにセット
  22AB  2006          			JR		NZ,MSD0
                      			
  22AD  2A7010        			LD		HL,(TEXTST)
  22B0  220411        			LD		(SADRS),HL
                      	
  22B3  ED5B0211      	MSD0:	LD		DE,(FSIZE)
  22B7  2A0411        			LD		HL,(SADRS)
  22BA  7E            	MSD1:	LD		A,(HL)
  22BB  CD3422        			CALL	SNDBYTE      ;SADRSからFSIZE Byteを送信。分割セーブの場合、直前に0436HでOPENされたファイルを対象として256バイトずつ0475HがCALLされる。
  22BE  1B            			DEC		DE
  22BF  7A            			LD		A,D
  22C0  B3            			OR		E
  22C1  23            			INC		HL
  22C2  20F6          			JR		NZ,MSD1
                      			
  22C4  C37923        			JP		MRET       ;正常RETURN
                      	
                      	;************************** 04D8H MONITOR リード インフォメーション代替処理 *****************
  22C7                	MLHED:
  22C7  D5            			PUSH	DE
  22C8  C5            			PUSH	BC
  22C9  E5            			PUSH	HL
                      	
  22CA  3E93          			LD		A,93H      ;HEADER LOADコマンド93H
  22CC  CD6D23        			CALL	MCMD       ;コマンドコード送信
  22CF  A7            			AND		A          ;00以外ならERROR
  22D0  C27E23        			JP		NZ,MERR
                      	
                      			
  22D3  110110        			LD		DE,LNAME
                      	
  22D6  0610          	MLH2:	LD		B,10H
  22D8  1A            	MLH4:	LD		A,(DE)     ;FNAME送信
  22D9  CD3422        			CALL	SNDBYTE
  22DC  13            			INC		DE
  22DD  10F9          			DJNZ	MLH4
                      	
  22DF  0611          			LD		B,11H
  22E1  3E0D          	MLH3:	LD		A,0DH
  22E3  CD3422        			CALL	SNDBYTE
  22E6  10F9          			DJNZ	MLH3
                      	
  22E8  CD2122        			CALL	RCVBYTE    ;状態取得(00H=OK)
  22EB  A7            			AND		A          ;00以外ならERROR
  22EC  C27E23        			JP		NZ,MERR
                      	
  22EF  CD2122        			CALL	RCVBYTE    ;状態取得(00H=OK)
  22F2  A7            			AND		A          ;00以外ならERROR
  22F3  C27E23        			JP		NZ,MERR
                      	
  22F6  21F010        			LD		HL,IBUFE
  22F9  0680          			LD		B,80H
  22FB  CD2122        	MLH5:	CALL	RCVBYTE    ;読みだされたインフォメーションブロックを受信
  22FE  77            			LD		(HL),A
  22FF  23            			INC		HL
  2300  10F9          			DJNZ	MLH5
                      	
  2302  CD2122        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2305  A7            			AND		A          ;00以外ならERROR
  2306  C27E23        			JP		NZ,MERR
                      	
  2309  11F010        			LD		DE,IBUFE
  230C  210010        			LD		HL,ELMD		;DOSファイル名とIFBファイル名が異なっていても一致したことにする
  230F  0612          			LD		B,12H
  2311  1A            	MLH7:	LD		A,(DE)
  2312  77            			LD		(HL),A
  2313  13            			INC		DE
  2314  23            			INC		HL
  2315  10FA          			DJNZ	MLH7
                      			
  2317  1860          			JR		MRET       ;正常RETURN
                      	
                      	;**************************** 04F8H MONITOR リード データ代替処理 ********************
  2319                	MLDAT:
  2319  D5            			PUSH	DE
  231A  C5            			PUSH	BC
  231B  E5            			PUSH	HL
  231C  3E94          			LD		A,94H      ;DATA LOADコマンド94H
  231E  CD6D23        			CALL	MCMD       ;コマンドコード送信
  2321  A7            			AND		A          ;00以外ならERROR
  2322  C27E23        			JP		NZ,MERR
                      	
  2325  CD2122        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2328  A7            			AND		A          ;00以外ならERROR
  2329  C27E23        			JP		NZ,MERR
                      	
  232C  CD2122        			CALL	RCVBYTE    ;状態取得(00H=OK)
  232F  A7            			AND		A          ;00以外ならERROR
  2330  C27E23        			JP		NZ,MERR
                      	
  2333  21F010        			LD		HL,IBUFE
  2336  7E            			LD		A,(HL)
  2337  FE05          			CP		05H				;FILE MODEが05ならBASIC TEXT START ADDRESSをSADRSにセット
  2339  2006          			JR		NZ,MLD0
  233B  2A7010        			LD		HL,(TEXTST)
  233E  220411        			LD		(SADRS),HL
                      	
                      	;		LD		HL,(FSIZE)
                      	;		LD		(10E8H),HL
                      	
  2341  110211        	MLD0:	LD		DE,FSIZE   ;FSIZE送信
  2344  1A            			LD		A,(DE)
  2345  CD3422        			CALL	SNDBYTE
  2348  13            			INC		DE
  2349  1A            			LD		A,(DE)
  234A  CD3422        			CALL	SNDBYTE
  234D  CD5923        			CALL	DBRCV      ;FSIZE分のデータを受信し、SADRSから格納。分割ロードの場合、直前に0436HでOPENされたファイルを対象として256バイトずつSADRSが加算されて04F8HがCALLされる。
                      	
                      	
  2350  CD2122        	MLD1:	CALL	RCVBYTE    ;状態取得(00H=OK)
  2353  A7            			AND		A          ;00以外ならERROR
  2354  C27E23        			JP		NZ,MERR
                      	
  2357  1820          			JR		MRET       ;正常RETURN
                      	
                      	;データ受信
  2359  ED5B0211      	DBRCV:	LD		DE,(FSIZE)
  235D  2A0411        			LD		HL,(SADRS)
  2360  CD2122        	DBRLOP:	CALL	RCVBYTE
  2363  77            			LD		(HL),A
  2364  1B            			DEC		DE
  2365  7A            			LD		A,D
  2366  B3            			OR		E
  2367  23            			INC		HL
  2368  20F6          			JR		NZ,DBRLOP   ;DE=0までLOOP
  236A  C9            			RET
                      	
                      	;************************** 0588H VRFY CMT ベリファイ代替処理 *******************
  236B  AF            	MVRFY:	XOR		A          ;正常終了フラグ
  236C  C9            			RET
                      	
                      	;******* 代替処理用コマンドコード送信 (IN:A コマンドコード) **********
  236D  F5            	MCMD:	PUSH	AF
  236E  CD1622        			CALL	INIT
  2371  F1            			POP		AF
  2372  CD3422        			CALL	SNDBYTE    ;コマンドコード送信
  2375  CD2122        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2378  C9            			RET
                      	
                      	;****** 代替処理用正常RETURN処理 **********
  2379  E1            	MRET:	POP		HL
  237A  C1            			POP		BC
  237B  D1            			POP		DE
  237C  AF            			XOR		A
  237D  C9            			RET
                      	
                      	;******* 代替処理用ERROR処理 **************
  237E                	MERR:
  237E  E1            			POP		HL
  237F  C1            			POP		BC
  2380  D1            			POP		DE
  2381  3E02          			LD		A,02H
  2383  37            			SCF
  2384  C9            			RET
                      			
  2385                			END
