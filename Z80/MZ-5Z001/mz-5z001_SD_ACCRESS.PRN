			  Z80 ASSEMBLER - ZASM VER 1.6
  1000                	ELMD		EQU		1000H
  10F0                	IBUFE		EQU		10F0H
  10F1                	FNAME		EQU		10F1H
  1102                	FSIZE		EQU		1102H
  1104                	SADRS		EQU		1104H
  11A4                	LBUF		EQU		11A4H
  1001                	LNAME		EQU		1001H
  1070                	TEXTST		EQU		1070H
  1072                	TEXTED		EQU		1072H
  1074                	VARST		EQU		1074H
  1076                	STRST		EQU		1076H
  1078                	VARED		EQU		1078H
  107A                	TMPEND		EQU		107AH
                      	
                      	;0A0H PORTA 送信データ(下位4ビット)
                      	;0A1H PORTB 受信データ(8ビット)
                      	;
                      	;0A2H PORTC Bit
                      	;7 IN  CHK
                      	;6 IN
                      	;5 IN
                      	;4 IN 
                      	;3 OUT
                      	;2 OUT FLG
                      	;1 OUT
                      	;0 OUT
                      	;
                      	;0A3H コントロールレジスタ
                      	
                      	
  2000                			ORG		2000H
                      	
  2000  C31220        			JP		START
                      	;******************** MONITOR CMTルーチン代替 *************************************
  2003  C36420        	ENT1:	JP		MSHED
  2006  C38620        	ENT2:	JP		MSDAT
  2009  C3C720        	ENT3:	JP		MLHED
  200C  C31921        	ENT4:	JP		MLDAT
  200F  C38621        	ENT5:	JP		MVRFY
                      			
  2012  CD1620        	START:	CALL	INIT
  2015  C9            			RET
                      			
                      	;**** 8255初期化 ****
                      	;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
  2016  3E8A          	INIT:	LD		A,8AH
  2018  D3A3          			OUT		(0A3H),A
                      	;出力BITをリセット
  201A  3E00          	INIT2:	LD		A,00H      ;PORTA <- 0
  201C  D3A0          			OUT		(0A0H),A
  201E  D3A2          			OUT		(0A2H),A   ;PORTC <- 0
  2020  C9            			RET
                      	
                      	;**** 1BYTE受信 ****
                      	;受信DATAをAレジスタにセットしてリターン
  2021                	RCVBYTE:
  2021  CD5620        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  2024  3E05          			LD		A,05H
  2026  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 1
  2028  DBA1          			IN		A,(0A1H)   ;PORTB -> A
  202A  F5            			PUSH 	AF
  202B  CD5D20        			CALL	F2CHK      ;PORTC BIT7が0になるまでLOOP
  202E  3E04          			LD		A,04H
  2030  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 0
  2032  F1            			POP 	AF
  2033  C9            			RET
                      			
                      	;**** 1BYTE送信 ****
                      	;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
  2034                	SNDBYTE:
  2034  F5            			PUSH	AF
  2035  1F            			RRA
  2036  1F            			RRA
  2037  1F            			RRA
  2038  1F            			RRA
  2039  E60F          			AND		0FH
  203B  CD4520        			CALL	SND4BIT
  203E  F1            			POP		AF
  203F  E60F          			AND		0FH
  2041  CD4520        			CALL	SND4BIT
  2044  C9            			RET
                      	
                      	;**** 4BIT送信 ****
                      	;Aレジスタ下位4ビットを送信する
  2045                	SND4BIT:
  2045  D3A0          			OUT		(0A0H),A
  2047  3E05          			LD		A,05H
  2049  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 1
  204B  CD5620        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  204E  3E04          			LD		A,04H
  2050  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 0
  2052  CD5D20        			CALL	F2CHK
  2055  C9            			RET
                      			
                      	;**** BUSYをCHECK(1) ****
                      	; 82H BIT7が1になるまでLOP
  2056  DBA2          	F1CHK:	IN		A,(0A2H)
  2058  E680          			AND		80H        ;PORTC BIT7 = 1?
  205A  28FA          			JR		Z,F1CHK
  205C  C9            			RET
                      	
                      	;**** BUSYをCHECK(0) ****
                      	; 82H BIT7が0になるまでLOOP
  205D  DBA2          	F2CHK:	IN		A,(0A2H)
  205F  E680          			AND		80H        ;PORTC BIT7 = 0?
  2061  20FA          			JR		NZ,F2CHK
  2063  C9            			RET
                      	
                      	;*********************** 0436H MONITOR ライト インフォメーション代替処理 ************
  2064                	MSHED:
  2064  D5            			PUSH	DE
  2065  C5            			PUSH	BC
  2066  E5            			PUSH	HL
  2067  3E91          			LD		A,91H      ;HEADER SAVEコマンド91H
  2069  CD8821        			CALL	MCMD       ;コマンドコード送信
  206C  A7            			AND		A          ;00以外ならERROR
  206D  C29921        			JP		NZ,MERR
                      	
  2070  21F010        			LD		HL,IBUFE
  2073  0680          			LD		B,80H
  2075  7E            	MSH1:	LD		A,(HL)     ;インフォメーション ブロック送信
  2076  CD3420        			CALL	SNDBYTE
  2079  23            			INC		HL
  207A  10F9          			DJNZ	MSH1
                      	
  207C  CD2120        			CALL	RCVBYTE    ;状態取得(00H=OK)
  207F  A7            			AND		A          ;00以外ならERROR
  2080  C29921        			JP		NZ,MERR
                      	
  2083  C39421        			JP		MRET       ;正常RETURN
                      	
                      	;******************** 0475H MONITOR ライト データ代替処理 **********************
  2086                	MSDAT:
  2086  D5            			PUSH	DE
  2087  C5            			PUSH	BC
  2088  E5            			PUSH	HL
  2089  3E92          			LD		A,92H      ;DATA SAVEコマンド92H
  208B  CD8821        			CALL	MCMD       ;コマンドコード送信
  208E  A7            			AND		A          ;00以外ならERROR
  208F  C29921        			JP		NZ,MERR
                      	
  2092  210211        			LD		HL,FSIZE   ;FSIZE送信
  2095  7E            			LD		A,(HL)
  2096  CD3420        			CALL	SNDBYTE
  2099  23            			INC		HL
  209A  7E            			LD		A,(HL)
  209B  CD3420        			CALL	SNDBYTE
                      	
  209E  CD2120        			CALL	RCVBYTE    ;状態取得(00H=OK)
  20A1  A7            			AND		A          ;00以外ならERROR
  20A2  C29921        			JP		NZ,MERR
                      	
  20A5  21F010        			LD		HL,IBUFE
  20A8  7E            			LD		A,(HL)
  20A9  FE05          			CP		05H				;FILE MODEが05ならBASIC TEXT START ADDRESSをSADRSにセット
  20AB  2006          			JR		NZ,MSD0
                      			
  20AD  2A7010        			LD		HL,(TEXTST)
  20B0  220411        			LD		(SADRS),HL
                      	
  20B3  ED5B0211      	MSD0:	LD		DE,(FSIZE)
  20B7  2A0411        			LD		HL,(SADRS)
  20BA  7E            	MSD1:	LD		A,(HL)
  20BB  CD3420        			CALL	SNDBYTE      ;SADRSからFSIZE Byteを送信。分割セーブの場合、直前に0436HでOPENされたファイルを対象として256バイトずつ0475HがCALLされる。
  20BE  1B            			DEC		DE
  20BF  7A            			LD		A,D
  20C0  B3            			OR		E
  20C1  23            			INC		HL
  20C2  20F6          			JR		NZ,MSD1
                      			
  20C4  C39421        			JP		MRET       ;正常RETURN
                      	
                      	;************************** 04D8H MONITOR リード インフォメーション代替処理 *****************
  20C7                	MLHED:
  20C7  D5            			PUSH	DE
  20C8  C5            			PUSH	BC
  20C9  E5            			PUSH	HL
  20CA  3E93          			LD		A,93H      ;HEADER LOADコマンド93H
  20CC  CD8821        			CALL	MCMD       ;コマンドコード送信
  20CF  A7            			AND		A          ;00以外ならERROR
  20D0  C29921        			JP		NZ,MERR
                      	
                      			
  20D3  110110        			LD		DE,LNAME
                      	
  20D6  0610          	MLH2:	LD		B,10H
  20D8  1A            	MLH4:	LD		A,(DE)     ;FNAME送信
  20D9  CD3420        			CALL	SNDBYTE
  20DC  13            			INC		DE
  20DD  10F9          			DJNZ	MLH4
                      	
  20DF  0611          			LD		B,11H
  20E1  3E0D          	MLH3:	LD		A,0DH
  20E3  CD3420        			CALL	SNDBYTE
  20E6  10F9          			DJNZ	MLH3
                      	
  20E8  CD2120        			CALL	RCVBYTE    ;状態取得(00H=OK)
  20EB  A7            			AND		A          ;00以外ならERROR
  20EC  C29921        			JP		NZ,MERR
                      	
  20EF  CD2120        			CALL	RCVBYTE    ;状態取得(00H=OK)
  20F2  A7            			AND		A          ;00以外ならERROR
  20F3  C29921        			JP		NZ,MERR
                      	
  20F6  21F010        			LD		HL,IBUFE
  20F9  0680          			LD		B,80H
  20FB  CD2120        	MLH5:	CALL	RCVBYTE    ;読みだされたインフォメーションブロックを受信
  20FE  77            			LD		(HL),A
  20FF  23            			INC		HL
  2100  10F9          			DJNZ	MLH5
                      	
  2102  CD2120        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2105  A7            			AND		A          ;00以外ならERROR
  2106  C29921        			JP		NZ,MERR
                      	
  2109  11F010        			LD		DE,IBUFE
  210C  210010        			LD		HL,ELMD		;DOSファイル名とIFBファイル名が異なっていても一致したことにする
  210F  0612          			LD		B,12H
  2111  1A            	MLH7:	LD		A,(DE)
  2112  77            			LD		(HL),A
  2113  13            			INC		DE
  2114  23            			INC		HL
  2115  10FA          			DJNZ	MLH7
                      			
  2117  187B          			JR		MRET       ;正常RETURN
                      	
                      	;**************************** 04F8H MONITOR リード データ代替処理 ********************
  2119                	MLDAT:
  2119  D5            			PUSH	DE
  211A  C5            			PUSH	BC
  211B  E5            			PUSH	HL
  211C  3E94          			LD		A,94H      ;DATA LOADコマンド94H
  211E  CD8821        			CALL	MCMD       ;コマンドコード送信
  2121  A7            			AND		A          ;00以外ならERROR
  2122  C29921        			JP		NZ,MERR
                      	
  2125  CD2120        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2128  A7            			AND		A          ;00以外ならERROR
  2129  C29921        			JP		NZ,MERR
                      	
  212C  CD2120        			CALL	RCVBYTE    ;状態取得(00H=OK)
  212F  A7            			AND		A          ;00以外ならERROR
  2130  C29921        			JP		NZ,MERR
                      	
  2133  21F010        			LD		HL,IBUFE
  2136  7E            			LD		A,(HL)
  2137  FE05          			CP		05H				;FILE MODEが05ならBASIC TEXT START ADDRESSをSADRSにセット
  2139  2006          			JR		NZ,MLD0
  213B  2A7010        			LD		HL,(TEXTST)
  213E  220411        			LD		(SADRS),HL
                      	
  2141  110211        	MLD0:	LD		DE,FSIZE   ;FSIZE送信
  2144  1A            			LD		A,(DE)
  2145  CD3420        			CALL	SNDBYTE
  2148  13            			INC		DE
  2149  1A            			LD		A,(DE)
  214A  CD3420        			CALL	SNDBYTE
  214D  CD7421        			CALL	DBRCV      ;FSIZE分のデータを受信し、SADRSから格納。分割ロードの場合、直前に0436HでOPENされたファイルを対象として256バイトずつSADRSが加算されて04F8HがCALLされる。
                      	
  2150  21F010        			LD		HL,IBUFE
  2153  7E            			LD		A,(HL)
  2154  FE05          			CP		05H				;FILE MODEが05ならBASIC TEXT END ADDRESSをTEXTEDにセット
  2156  2013          			JR		NZ,MLD1
  2158  227210        			LD		(TEXTED),HL
  215B  23            			INC		HL
  215C  227410        			LD		(VARST),HL		;VARSTをセット
  215F  23            			INC		HL
  2160  227610        			LD		(STRST),HL		;STRSTをセット
  2163  23            			INC		HL
  2164  23            			INC		HL
  2165  227810        			LD		(VARED),HL		;VAREDをセット
  2168  227A10        			LD		(TMPEND),HL		;TMPENDをセット
                      	
  216B  CD2120        	MLD1:	CALL	RCVBYTE    ;状態取得(00H=OK)
  216E  A7            			AND		A          ;00以外ならERROR
  216F  C29921        			JP		NZ,MERR
                      	
  2172  1820          			JR		MRET       ;正常RETURN
                      	
                      	;データ受信
  2174  ED5B0211      	DBRCV:	LD		DE,(FSIZE)
  2178  2A0411        			LD		HL,(SADRS)
  217B  CD2120        	DBRLOP:	CALL	RCVBYTE
  217E  77            			LD		(HL),A
  217F  1B            			DEC		DE
  2180  7A            			LD		A,D
  2181  B3            			OR		E
  2182  23            			INC		HL
  2183  20F6          			JR		NZ,DBRLOP   ;DE=0までLOOP
  2185  C9            			RET
                      	
                      	;************************** 0588H VRFY CMT ベリファイ代替処理 *******************
  2186  AF            	MVRFY:	XOR		A          ;正常終了フラグ
  2187  C9            			RET
                      	
                      	;******* 代替処理用コマンドコード送信 (IN:A コマンドコード) **********
  2188  F5            	MCMD:	PUSH	AF
  2189  CD1620        			CALL	INIT
  218C  F1            			POP		AF
  218D  CD3420        			CALL	SNDBYTE    ;コマンドコード送信
  2190  CD2120        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2193  C9            			RET
                      	
                      	;****** 代替処理用正常RETURN処理 **********
  2194  E1            	MRET:	POP		HL
  2195  C1            			POP		BC
  2196  D1            			POP		DE
  2197  AF            			XOR		A
  2198  C9            			RET
                      	
                      	;******* 代替処理用ERROR処理 **************
  2199                	MERR:
  2199  E1            			POP		HL
  219A  C1            			POP		BC
  219B  D1            			POP		DE
  219C  3E02          			LD		A,02H
  219E  37            			SCF
  219F  C9            			RET
                      			
  21A0                			END
